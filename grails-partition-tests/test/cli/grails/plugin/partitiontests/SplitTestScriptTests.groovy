package grails.plugin.partitiontests

import grails.test.AbstractCliTestCase

/**
 * Run with: test-app --other
 * See target/cli-output for any output generated by the script
 * CLI script testing
 * http://www.cacoethes.co.uk/blog/groovyandgrails/testing-your-grails-scripts
 * 
 * These tests are flakey on travisci: https://travis-ci.org/adrianbk/grails-partition-tests/jobs/159853207
 */
class SplitTestScriptTests extends AbstractCliTestCase{


    def scriptName = 'partition-test'

    @Override
    protected void setUp() {
        timeout = 10000
    }

    @Override
    protected void tearDown() {
        println "--------------------------------Script output---------------------${output}"
    }

    void testShouldSoThisTestTypeDoesntExplodeGrailsTestApp(){
    }

    void testShouldRequireBothArgs(){
        executeAndWait(false, '--skip')
        assert output.contains('split and totalSplits must be suppplied')
    }

    void testShouldRequireCurrentSplitLessThanTotalSplits(){
        executeAndWait(false, '--skip', "--split=2",  "--totalSplits=1")
        assert output.contains(' must not be greater than totalSplits')
    }

    void testShouldNotAllowNegativeSplits(){
        executeAndWait(false, '--skip', "--split=-1",  "--totalSplits=-3")
        assert output.contains('Split arguments must not be negative!')
    }

    void testValidSplits(){
        executeAndWait(true, '--skip', "--split=1",  "--totalSplits=3")
        assert output.contains("** Running Tests in partition mode. Split (1) of (3) split's **")
    }

    private void executeAndWait(boolean expectSuccess, String... args) {
        execute([scriptName] + (args as List))
        def result = waitForProcess()
        if(expectSuccess) {
            assert result == 0 
        } else {
            assert result > 0 
        }
        verifyHeader()
    }
}
